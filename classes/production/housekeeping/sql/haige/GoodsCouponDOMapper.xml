<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.haige.db.entity.GoodsCouponDO">
  <resultMap id="BaseResultMap" type="com.haige.db.entity.GoodsCouponDO">
    <id column="gc_id" jdbcType="INTEGER" property="gcId" />
    <result column="goods_id" jdbcType="INTEGER" property="goodsId" />
    <result column="gc_type" jdbcType="TINYINT" property="gcType" />
    <result column="gc_price" jdbcType="DECIMAL" property="gcPrice" />
    <result column="gc_use_condtion" jdbcType="TINYINT" property="gcUseCondtion" />
    <result column="gc_remarks" jdbcType="VARCHAR" property="gcRemarks" />
    <result column="gc_is_overlying" jdbcType="TINYINT" property="gcIsOverlying" />
  </resultMap>
  <sql id="Base_Column_List">
    gc_id, goods_id, gc_type, gc_price, gc_use_condtion, gc_remarks, gc_is_overlying
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from haige_goods_coupon
    where gc_id = #{gcId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from haige_goods_coupon
    where gc_id = #{gcId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.haige.db.entity.GoodsCouponDO">
    insert into haige_goods_coupon (gc_id, goods_id, gc_type, 
      gc_price, gc_use_condtion, gc_remarks, 
      gc_is_overlying)
    values (#{gcId,jdbcType=INTEGER}, #{goodsId,jdbcType=INTEGER}, #{gcType,jdbcType=TINYINT}, 
      #{gcPrice,jdbcType=DECIMAL}, #{gcUseCondtion,jdbcType=TINYINT}, #{gcRemarks,jdbcType=VARCHAR}, 
      #{gcIsOverlying,jdbcType=TINYINT})
  </insert>
  <insert id="insertSelective" parameterType="com.haige.db.entity.GoodsCouponDO">
    insert into haige_goods_coupon
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="gcId != null">
        gc_id,
      </if>
      <if test="goodsId != null">
        goods_id,
      </if>
      <if test="gcType != null">
        gc_type,
      </if>
      <if test="gcPrice != null">
        gc_price,
      </if>
      <if test="gcUseCondtion != null">
        gc_use_condtion,
      </if>
      <if test="gcRemarks != null">
        gc_remarks,
      </if>
      <if test="gcIsOverlying != null">
        gc_is_overlying,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="gcId != null">
        #{gcId,jdbcType=INTEGER},
      </if>
      <if test="goodsId != null">
        #{goodsId,jdbcType=INTEGER},
      </if>
      <if test="gcType != null">
        #{gcType,jdbcType=TINYINT},
      </if>
      <if test="gcPrice != null">
        #{gcPrice,jdbcType=DECIMAL},
      </if>
      <if test="gcUseCondtion != null">
        #{gcUseCondtion,jdbcType=TINYINT},
      </if>
      <if test="gcRemarks != null">
        #{gcRemarks,jdbcType=VARCHAR},
      </if>
      <if test="gcIsOverlying != null">
        #{gcIsOverlying,jdbcType=TINYINT},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.haige.db.entity.GoodsCouponDO">
    update haige_goods_coupon
    <set>
      <if test="goodsId != null">
        goods_id = #{goodsId,jdbcType=INTEGER},
      </if>
      <if test="gcType != null">
        gc_type = #{gcType,jdbcType=TINYINT},
      </if>
      <if test="gcPrice != null">
        gc_price = #{gcPrice,jdbcType=DECIMAL},
      </if>
      <if test="gcUseCondtion != null">
        gc_use_condtion = #{gcUseCondtion,jdbcType=TINYINT},
      </if>
      <if test="gcRemarks != null">
        gc_remarks = #{gcRemarks,jdbcType=VARCHAR},
      </if>
      <if test="gcIsOverlying != null">
        gc_is_overlying = #{gcIsOverlying,jdbcType=TINYINT},
      </if>
    </set>
    where gc_id = #{gcId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.haige.db.entity.GoodsCouponDO">
    update haige_goods_coupon
    set goods_id = #{goodsId,jdbcType=INTEGER},
      gc_type = #{gcType,jdbcType=TINYINT},
      gc_price = #{gcPrice,jdbcType=DECIMAL},
      gc_use_condtion = #{gcUseCondtion,jdbcType=TINYINT},
      gc_remarks = #{gcRemarks,jdbcType=VARCHAR},
      gc_is_overlying = #{gcIsOverlying,jdbcType=TINYINT}
    where gc_id = #{gcId,jdbcType=INTEGER}
  </update>
</mapper>