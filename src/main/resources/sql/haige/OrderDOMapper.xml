<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.haige.db.mapper.OrderDOMapper">
  <resultMap id="BaseResultMap" type="com.haige.db.entity.OrderDO">
    <id column="order_id" jdbcType="VARCHAR" property="orderId"/>
    <result column="goods_id" jdbcType="INTEGER" property="goodsId"/>
    <result column="goods_name" jdbcType="VARCHAR" property="goodsName"/>
    <result column="order_status" jdbcType="VARCHAR" property="orderStatus"/>
    <result column="order_create_user" jdbcType="INTEGER" property="orderCreateUser"/>
    <result column="order_create_time" jdbcType="TIMESTAMP" property="orderCreateTime"/>
    <result column="order_store" jdbcType="INTEGER" property="orderStore"/>
    <result column="order_update_user" jdbcType="INTEGER" property="orderUpdateUser"/>
    <result column="order_update_time" jdbcType="TIMESTAMP" property="orderUpdateTime"/>
    <result column="order_amount" jdbcType="DECIMAL" property="orderAmount"/>
    <result column="order_price" jdbcType="DECIMAL" property="orderPrice"/>
    <result column="coupon_ids" jdbcType="VARCHAR" property="couponIds"/>
    <result column="order_address" jdbcType="VARCHAR" property="orderAddress"/>
    <result column="order_count" jdbcType="INTEGER" property="orderCount"/>
    <collection property="files" javaType="ArrayList" column="goods_Id" ofType="FileInfoDO"
      select="com.haige.db.mapper.FileInfoDOMapper.selectFileById"></collection>
  </resultMap>


  <resultMap id="queryOrderListMap" type="com.haige.db.entity.OrderDO">
    <id column="order_id" jdbcType="VARCHAR" property="orderId"/>
    <result column="goods_id" jdbcType="INTEGER" property="goodsId"/>
    <result column="goods_name" jdbcType="VARCHAR" property="goodsName"/>
    <result column="order_status" jdbcType="VARCHAR" property="orderStatus"/>
    <result column="order_create_user" jdbcType="INTEGER" property="orderCreateUser"/>
    <result column="order_create_time" jdbcType="TIMESTAMP" property="orderCreateTime"/>
    <result column="order_store" jdbcType="INTEGER" property="orderStore"/>
    <result column="order_update_user" jdbcType="INTEGER" property="orderUpdateUser"/>
    <result column="order_update_time" jdbcType="TIMESTAMP" property="orderUpdateTime"/>
    <result column="order_amount" jdbcType="DECIMAL" property="orderAmount"/>
    <result column="order_price" jdbcType="DECIMAL" property="orderPrice"/>
    <result column="coupon_ids" jdbcType="VARCHAR" property="couponIds"/>
    <result column="order_address" jdbcType="VARCHAR" property="orderAddress"/>
    <result column="order_count" jdbcType="INTEGER" property="orderCount"/>
    <result column="goods_cover_url" jdbcType="INTEGER" property="goodsCoverUrl"/>
    <result column="goods_type" jdbcType="INTEGER" property="goodsType"/>

    <collection property="files" javaType="ArrayList" column="goods_Id" ofType="FileInfoDO"
      select="com.haige.db.mapper.FileInfoDOMapper.selectFileById"></collection>
  </resultMap>
  <sql id="Base_Column_List">
    order_id, goods_id, goods_name, order_status, order_create_user, order_create_time, 
    order_store, order_update_user, order_update_time, order_amount, order_price, coupon_ids,order_address,order_count
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List"/>
    from haige_order_info
    where order_id = #{orderId,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from haige_order_info
    where order_id = #{orderId,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" parameterType="com.haige.db.entity.OrderDO">
    insert into haige_order_info (order_id, goods_id, goods_name, 
      order_status, order_create_user, order_create_time, 
      order_store, order_update_user, order_update_time, 
      order_amount, order_price, coupon_ids,order_address,order_count
      )
    values (#{orderId,jdbcType=VARCHAR}, #{goodsId,jdbcType=INTEGER}, #{goodsName,jdbcType=VARCHAR}, 
      #{orderStatus,jdbcType=VARCHAR}, #{orderCreateUser,jdbcType=INTEGER}, #{orderCreateTime,jdbcType=TIMESTAMP}, 
      #{orderStore,jdbcType=INTEGER}, #{orderUpdateUser,jdbcType=INTEGER}, #{orderUpdateTime,jdbcType=TIMESTAMP}, 
      #{orderAmount,jdbcType=DECIMAL}, #{orderPrice,jdbcType=DECIMAL}, #{couponIds,jdbcType=VARCHAR},
      #{orderAddress,jdbcType=VARCHAR},
      #{orderCount,jdbcType=INTEGER},
      )
  </insert>
  <insert id="insertSelective" parameterType="com.haige.db.entity.OrderDO">
    insert into haige_order_info
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="orderId != null">
        order_id,
      </if>
      <if test="goodsId != null">
        goods_id,
      </if>
      <if test="goodsName != null">
        goods_name,
      </if>
      <if test="orderStatus != null">
        order_status,
      </if>
      <if test="orderCreateUser != null">
        order_create_user,
      </if>
      <if test="orderCreateTime != null">
        order_create_time,
      </if>
      <if test="orderStore != null">
        order_store,
      </if>
      <if test="orderUpdateUser != null">
        order_update_user,
      </if>
      <if test="orderUpdateTime != null">
        order_update_time,
      </if>
      <if test="orderAmount != null">
        order_amount,
      </if>
      <if test="orderPrice != null">
        order_price,
      </if>
      <if test="couponIds != null">
        coupon_ids,
      </if>
      <if test="orderAddress != null">
        order_address,
      </if>
      <if test="orderCount != null">
        order_count,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="orderId != null">
        #{orderId,jdbcType=VARCHAR},
      </if>
      <if test="goodsId != null">
        #{goodsId,jdbcType=INTEGER},
      </if>
      <if test="goodsName != null">
        #{goodsName,jdbcType=VARCHAR},
      </if>
      <if test="orderStatus != null">
        #{orderStatus,jdbcType=VARCHAR},
      </if>
      <if test="orderCreateUser != null">
        #{orderCreateUser,jdbcType=INTEGER},
      </if>
      <if test="orderCreateTime != null">
        #{orderCreateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="orderStore != null">
        #{orderStore,jdbcType=INTEGER},
      </if>
      <if test="orderUpdateUser != null">
        #{orderUpdateUser,jdbcType=INTEGER},
      </if>
      <if test="orderUpdateTime != null">
        #{orderUpdateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="orderAmount != null">
        #{orderAmount,jdbcType=DECIMAL},
      </if>
      <if test="orderPrice != null">
        #{orderPrice,jdbcType=DECIMAL},
      </if>
      <if test="couponIds != null">
        #{couponIds,jdbcType=VARCHAR},
      </if>
      <if test="orderAddress != null">
        #{orderAddress,jdbcType=VARCHAR},
      </if>
      <if test="orderCount != null">
        #{orderCount,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.haige.db.entity.OrderDO">
    update haige_order_info
    <set>
      <if test="goodsId != null">
        goods_id = #{goodsId,jdbcType=INTEGER},
      </if>
      <if test="goodsName != null">
        goods_name = #{goodsName,jdbcType=VARCHAR},
      </if>
      <if test="orderStatus != null">
        order_status = #{orderStatus,jdbcType=VARCHAR},
      </if>
      <if test="orderCreateUser != null">
        order_create_user = #{orderCreateUser,jdbcType=INTEGER},
      </if>
      <if test="orderCreateTime != null">
        order_create_time = #{orderCreateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="orderStore != null">
        order_store = #{orderStore,jdbcType=INTEGER},
      </if>
      <if test="orderUpdateUser != null">
        order_update_user = #{orderUpdateUser,jdbcType=INTEGER},
      </if>
      <if test="orderUpdateTime != null">
        order_update_time = #{orderUpdateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="orderAmount != null">
        order_amount = #{orderAmount,jdbcType=DECIMAL},
      </if>
      <if test="orderPrice != null">
        order_price = #{orderPrice,jdbcType=DECIMAL},
      </if>
      <if test="couponIds != null">
        coupon_ids = #{couponIds,jdbcType=VARCHAR},
      </if>
      <if test="orderAddress != null">
        order_address = #{orderAddress,jdbcType=VARCHAR},
      </if>
      <if test="orderCount != null">
        order_count = #{orderCount,jdbcType=INTEGER},
      </if>
    </set>
    where order_id = #{orderId,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.haige.db.entity.OrderDO">
    update haige_order_info
    set goods_id = #{goodsId,jdbcType=INTEGER},
      goods_name = #{goodsName,jdbcType=VARCHAR},
      order_status = #{orderStatus,jdbcType=VARCHAR},
      order_create_user = #{orderCreateUser,jdbcType=INTEGER},
      order_create_time = #{orderCreateTime,jdbcType=TIMESTAMP},
      order_store = #{orderStore,jdbcType=INTEGER},
      order_update_user = #{orderUpdateUser,jdbcType=INTEGER},
      order_update_time = #{orderUpdateTime,jdbcType=TIMESTAMP},
      order_amount = #{orderAmount,jdbcType=DECIMAL},
      order_price = #{orderPrice,jdbcType=DECIMAL},
      coupon_ids = #{couponIds,jdbcType=VARCHAR},
      order_address = #{orderAddress,jdbcType=VARCHAR},
      order_count = #{orderCount,jdbcType=INTEGER}
    where order_id = #{orderId,jdbcType=VARCHAR}
  </update>

  <select id="findOrderDoList" resultMap="queryOrderListMap" parameterType="java.util.HashMap">
    select
    order_id,
    a.goods_id,
    a.goods_name,
    order_status,
    order_create_user,
    order_create_time,
    order_store,
    order_update_user,
    order_update_time,
    order_amount,
    order_price,
    coupon_ids,
    order_address,
    order_count,
    b.goods_cover_url,
    b.goods_type from haige_order_info a
    LEFT JOIN haige_goods_info b ON a.goods_id = b.goods_Id

    <where>
      <if test="userid != 0">
        order_create_user = #{userid,jdbcType=INTEGER}
      </if>
      <if test="status != 0">
        AND order_status = #{status,jdbcType=VARCHAR}
      </if>
    </where>
    order by order_create_time desc
  </select>

  <select id="countOrder" resultType="java.util.Map">
    SELECT COUNT(*) as ct, order_status
    from haige_order_info
    <where>
      <if test=" userId != null">
        order_create_user = #{userId,jdbcType=INTEGER}
      </if>
    </where>
    GROUP BY order_status
    UNION all
    select count(*) ct,serve_status as order_status from haige_order_serve_details
    <where>
      <if test=" userId != null">
        serve_create_user = #{userId,jdbcType=INTEGER}
      </if>
    </where>
    GROUP BY order_status

  </select>
</mapper>